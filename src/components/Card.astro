---

interface Props {
  data: array;
} 

const { data } = Astro.props;

---



<div>
  <div class="card relative mx-auto flex w-full max-w-md  flex-col rounded-xl  bg-white bg-clip-border text-gray-700 shadow-2xl border">
    <div
      class="relative mx-4 mt-4 overflow-hidden text-white shadow-lg rounded-xl bg-blue-gray-500 bg-clip-border shadow-blue-gray-500/40">
      <img
      class="h-[250px] object-cover object-center "
        src={data.img}
        alt={data.title} />
        <div class="overlay "></div>  
    </div>
    <div class="p-6">
      <div class="flex items-center justify-between mb-3">
        <h5 class="block uppercase font-sans text-xl antialiased font-medium leading-snug tracking-normal text-blue-gray-900">
          {data.title}
        </h5>
       
      </div>
      <p class="block font-sans text-base antialiased font-light leading-relaxed text-gray-700">
        {data.description}
      </p>
      <div class="flex justify-center flex-wrap items-center gap-3 mt-8 group">
      
      
        <span
          class="cursor-pointer rounded-full border border-gray-900/5 bg-gray-900/5 p-2 text-gray-900 transition-colors hover:border-gray-900/10 hover:bg-gray-900/10 hover:!opacity-100 group-hover:opacity-70">
          <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-javascript w-6 h-6"  viewBox="0 0 24 24" stroke-width="1.5" stroke="#EFD81D" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="#"/>
            <path d="M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z" />
            <path d="M7.5 8h3v8l-2 -1" />
            <path d="M16.5 8h-2.5a.5 .5 0 0 0 -.5 .5v3a.5 .5 0 0 0 .5 .5h1.423a.5 .5 0 0 1 .495 .57l-.418 2.93l-2 .5" />
          </svg>
        </span>
        <span
          class="cursor-pointer rounded-full border border-gray-900/5 bg-gray-900/5 p-2 text-gray-900 transition-colors hover:border-gray-900/10 hover:bg-gray-900/10 hover:!opacity-100 group-hover:opacity-70">
          <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-html5 w-6 h-6" viewBox="0 0 24 24" stroke-width="1.5" stroke="#DD4B25" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z" />
            <path d="M15.5 8h-7l.5 4h6l-.5 3.5l-2.5 .75l-2.5 -.75l-.1 -.5" />
          </svg>
        </span>
        <span
          class="cursor-pointer rounded-full border border-gray-900/5 bg-gray-900/5 p-2 text-gray-900 transition-colors hover:border-gray-900/10 hover:bg-gray-900/10 hover:!opacity-100 group-hover:opacity-70">
          <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-vue w-6 h-6"  viewBox="0 0 24 24" stroke-width="1.5" stroke="#3FB27F" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M16.5 4l-4.5 8l-4.5 -8" />
            <path d="M3 4l9 16l9 -16" />
          </svg>
        </span>
      
      </div>
    </div>
    <div class="p-6 pt-3">
      <a
        href={data.site}
        target="_blank"
        class="block w-full select-none rounded-lg bg-blue-500 hover:bg-blue-600 py-3.5 px-7 text-center align-middle font-sans text-sm font-bold uppercase text-white shadow-md shadow-gray-900/10 transition-all hover:shadow-lg hover:shadow-gray-900/20 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
        type="button">
        visit site
      </a>
    </div>
  </div> 
</div>

<script>
  // Función para manejar el evento de scroll
  const handleScroll = () => {
    const elements = document.querySelectorAll('.card');

    elements.forEach((element, index) => {
      const top = element.getBoundingClientRect().top;
      const windowHeight = window.innerHeight;

      if (top < windowHeight) {
        setTimeout(() => {
          element.classList.add('show');
        }, index * 300);
      }
    });
  };

  // Registra el evento de scroll y muestra elementos al cargar la página
  window.addEventListener('scroll', handleScroll);
  handleScroll(); // Muestra elementos ya visibles al cargar la página
</script>

<style>
  .overlay{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    
  }
  .card {
      opacity: 0;
      transform: translateY(90px);
      transition: opacity 0.3s, transform 0.8s;
    }

    .card.show {
      opacity: 1;
      transform: translateY(0);
    }
</style>